{
  "name": "Carbon Neutrality",
  "title": "Carbon Neutrality",
  "description": "The game of arriving carbon neutrality.",
  "version": "1.0.0",
  "agents": [
    2
  ],
  "configuration": {
    "episodeSteps": 300,
    "startingCarbon": {
      "description": "The starting amount of carbon available on the board.",
      "type": "integer",
      "default": 2500
    },
    "size": {
      "description": "The number of cells vertically and horizontally on the board.",
      "type": "integer",
      "default": 15,
      "minimum": 2
    },
    "numberOfBases": {
      "description": "The number of bases for each player.",
      "type": "integer",
      "default": 2,
      "minimum": 1,
      "maximum": 2
    },
    "startPosOffset": {
      "description": "The offset of starting position (closer to center for bigger value)",
      "type": "integer",
      "default": 1
    },
    "startingCellCarbon": {
      "description": "The starting maximum mount of carbon in cell.",
      "type": "number",
      "default": 50,
      "minimum": 0
    },
    "maxCellCarbon": {
      "description": "The maximum carbon that can be in any cell.",
      "type": "integer",
      "default": 100,
      "minimum": 0
    },
    "recCollectorCost": {
      "description": "The amount of recruitment center to recruit a new collector.",
      "type": "integer",
      "default": 30,
      "minimum": 0
    },
    "recCollectorIncreaseCost": {
      "description": "The increase amount of recruitment center to recruit a new collector.",
      "type": "integer",
      "default": 0,
      "minimum": 0
    },
    "recPlanterCost": {
      "description": "The amount of recruitment center to recruit a new planter.",
      "type": "integer",
      "default": 30,
      "minimum": 0
    },
    "recPlanterIncreaseCost": {
      "description": "The increase amount of recruitment center to recruit a new planter.",
      "type": "integer",
      "default": 0,
      "minimum": 0
    },
    "moveCost": {
      "description": "The percent deducted from ship's current carbon per move.",
      "type": "number",
      "default": 0
    },
    "smeltCost": {
      "description": "The amount of carbon to smelt cargos into carbon .",
      "type": "integer",
      "default": 0,
      "minimum": 0
    },
    "workerLimit": {
      "description": "The number of worker",
      "type": "integer",
      "default": 10
    },
    "planterLimit": {
      "description": "The limitation of planter.",
      "type": "integer",
      "default": 1,
      "minimum": 0
    },
    "collectorLimit": {
      "description": "The limitation of collector.",
      "type": "integer",
      "default": 2,
      "minimum": 0
    },
    "plantCost": {
      "description": "The initial amount of planter to plant a tree.",
      "type": "integer",
      "default": 20,
      "minimum": 0
    },
    "plantCostInflationRatio": {
      "description": "The ratio of market amount of planter to plant a tree after a certain number. Real cost is (plantCost + plantCostInflationRatio * plantCostInflationBase ** n).",
      "type": "number",
      "default": 5,
      "minimum": 0
    },
    "plantCostInflationBase": {
      "description": "The base of market amount of planter to plant a tree after a certain number. Real cost is (plantCost + plantCostInflationRatio * plantCostInflationBase ** n).",
      "type": "number",
      "default": 1.235,
      "minimum": 0
    },
    "playerTreeProtectiveNumber": {
      "description": "The cost of planter to plant a tree is `plantCost` if not exceeding this number.",
      "type": "integer",
      "default": 0,
      "minimum": -1
    },
    "co2FrmWithered": {
      "description": "The amount of carbon from withered tree.",
      "type": "integer",
      "default": 30,
      "minimum": 0
    },
    "seizeCost": {
      "description": "The amount of planter to seize a tree from competitor.",
      "type": "number",
      "default": 20,
      "minimum": 0
    },
    "initialCollectRate": {
      "description": "The initial rate of collector collected from a cell by not moving.",
      "type": "number",
      "default": 0.3,
      "minimum": 0
    },
    "collectDecreaseRate": {
      "description": "The decrease rate for collector to collect CO2 according to one player's collectors count.",
      "type": "number",
      "default": 0.0,
      "minimum": 0
    },
    "regenRate": {
      "description": "The rate carbon regenerates on the board.",
      "type": "number",
      "default": 0.05,
      "minimum": 0
    },
    "treeLifespan": {
      "description": "The maximum age of tree",
      "type": "integer",
      "default": 50
    },
    "cellAbsorptionRate": {
      "description": "The absorption rate of the tree from cell",
      "type": "number",
      "default": 0.0375
    },
    "collectorAbsorptionRate": {
      "description": "The absorption rate of the tree from collector nearby",
      "type": "number",
      "default": 0.1
    },
    "randomSeed": {
      "description": "The seed used to initialize the random number generator.",
      "type": "integer",
      "default": null
    },
    "agentTimeout": {
      "description": "Obsolete field kept for backwards compatibility, please use observation.remainingOverageTime.",
      "type": "number",
      "minimum": 0,
      "default": 60
    },
    "actTimeout": 1,
    "runTimeout": 9600
  },
  "reward": {
    "description": "The amount of player owned money (equal to players[index][0]) if the player has not been eliminated, else step_eliminated - episode_steps - 1.",
    "type": "integer",
    "default": 80
  },
  "observation": {
    "full_carbon": {
      "description": "Serialized list of available carbon per cell on the board.",
      "type": "array",
      "hidden": true,
      "items": {
        "type": "integer",
        "minimum": 0
      }
    },
    "carbon": {
      "description": "Serialized list of available carbon per cell on the board for each player.",
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0
      }
    },
    "players": {
      "description": "List of players and their assets.",
      "type": "array",
      "shared": true,
      "items": {
        "type": "array",
        "items": [
          {
            "description": "Money: The amount player owned money (equal to reward).",
            "type": "integer",
            "minimum": 0
          },
          {
            "description": "RecrtCenter: The position of player owned recruitment center.",
            "type": "integer",
            "additionalProperties": {
              "description": "Key: uid of the asset (RecrtCenter). Value: position (row * size + column)",
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Workers: The list of player recruited workers.",
            "type": "object",
            "additionalProperties": {
              "description": "Key: uid of the asset (worker).",
              "type": "array",
              "items": [
                {
                  "description": "Position: (row * size + column).",
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "description": "Collected Carbon: The amount present in a worker.",
                  "type": "integer",
                  "default": 0,
                  "minimum": 0
                },
                {
                  "description": "The occupation of worker",
                  "enum": [
                    "COLLECTOR",
                    "PLANTER"
                  ]
                }
              ]
            }
          },
          {
            "description": "Tree",
            "type": "object",
            "additionalProperties": {
              "description": "Key: uid of the asset (board). Value: position (row * size + column)",
              "type": "array",
              "items": [
                {
                  "description": "Position: (row * size + column).",
                  "type": "integer"
                },
                {
                  "description": "age",
                  "type": "integer",
                  "default": 0,
                  "minimum": 0
                }
              ]
            }
          }
        ]
      }
    },
    "player": {
      "description": "The current agent's player index.",
      "type": "integer",
      "defaults": [
        0,
        1,
        2,
        3
      ]
    },
    "trees": {
      "description": "",
      "type": "object",
      "shared": true,
      "additionalProperties": {
        "description": "",
        "type": "array",
        "items": [
          {
            "description": "",
            "type": "integer"
          },
          {
            "description": "",
            "type": "integer",
            "default": 0
          }
        ]
      }
    },
    "remainingOverageTime": 60
  },
  "action": {
    "description": "Actions taken per asset (planter or collector).",
    "type": "object",
    "additionalProperties": {
      "description": "Key: uid of the asset. Value: action. RECRUIT planter, RECRUIT collector",
      "enum": [
        "RECPLANTER",
        "RECCOLLECTOR",
        "UP",
        "DOWN",
        "RIGHT",
        "LEFT"
      ]
    }
  }
}
